<!-- index.ejs -->

<html lang="en">

<%- include('./partials/head.ejs') %>
    <%- include('./partials/nav.ejs') %>

        <body>

            <div id="searchContainer">
                <h1>List of Flights</h1>
                <form id="searchForm">
                    <input type="text" name="query" id="searchInput" placeholder="Search flights">
                    <button type="submit">Search</button>
                </form>
                <select id="databaseSelector">
            <option value="postgresql">PostgreSQL</option>
            <option value="mongodb">MongoDB</option>
                </select>
            </div>

            <div id="flightsContainer" style="display: flex;">
                <ul id="flightsList">
                </ul>

                <div id="flightDetails" style="margin-left: 20px;">
                </div>
            </div>

            <p id="noFlightsMessage" style="display: none;">No flights available.</p>
            <div id="flightSearchHelper">
                <h3>Help Menu</h3>
                <ul>
                    <p>This page presents a dataset of flight information for analysis and search purposes.</p>
                    <p>Use the search bar to find specific flights by entering a flight number, destination airport code, or status.</p>
                    <p>Click on a flight to view its detailed information.</p>
                    <p>Choose between PostgreSQL or MongoDB as your database option to search from; your selection will dynamically update the displayed flights accordingly.</p>
                    <p>For testing purposes with the sample data and database backups, try searching for "MONGOTEST" or "PGTEST" to ensure data retrieval from the correct database.</p>
            </div>
            <div id="flightEditContainer" style="display: none;">
                <h3>Edit Flight</h3>
                <form id="flightEditForm">


                    <input type="hidden" id="flightId" name="flightId" value="">
                    <label for="status">Status:</label>
                    <input type="text" id="status" name="status">

                    <label for="flightNumber">Flight Number:</label>
                    <input type="text" id="flightNumber" name="flightNumber">

                    <label for="arrivalAirport">Arrival Airport Code:</label>
                    <input type="text" id="arrivalAirport" name="arrivalAirport">

                    <label for="departureAirport">Departure Airport Code:</label>
                    <input type="text" id="departureAirport" name="departureAirport">

                    <label for="arrivalTime">Arrival Time:</label>
                    <input type="text" id="arrivalTime" name="arrivalTime">

                    <label for="departureTime">Departure Time:</label>
                    <input type="text" id="departureTime" name="departureTime">

                    <label for="aircraftCode">Aircraft Code:</label>
                    <input type="text" id="aircraftCode" name="aircraftCode">

                    <button type="submit">Submit</button>
                </form>
            </div>



            <a href="/flights">Back to Flights</a>


            <script>
                async function fetchAndRenderFlights(query) {
                    const selectedDatabase = document.getElementById('databaseSelector').value;
                    try {
                        let response;
                        if (selectedDatabase === 'mongodb') {
                            response = await fetch(`/api/flights/search?db=mongodb&query=${encodeURIComponent(query)}`);
                            if (!response.ok) {
                                throw new Error(`Error: ${response.status} - ${response.statusText}`);
                            } else {
                                console.log(`mongo response`, response);
                            }

                        } else if (selectedDatabase === 'postgresql') {
                            response = await fetch(`/api/flights/search?db=postgresql&query=${encodeURIComponent(query)}`);
                            if (!response.ok) {
                                throw new Error(`Error: ${response.status} - ${response.statusText}`);
                            } else {
                                console.log(`postgres response`, response);
                            }
                        }

                        const results = await response.json();

                        results.sort((a, b) => a.flight_id - b.flight_id);

                        const flightsList = document.getElementById('flightsList');
                        const noFlightsMessage = document.getElementById('noFlightsMessage');

                        if (results && results.length > 0) {
                            flightsList.innerHTML = results.map(flight => `
                    <li>
                        <strong>Flight Number:</strong> ${flight.flight_no}<br>
                        <strong>Destination:</strong> ${flight.arrival_airport}<br>
                        <strong>Departure Time:</strong> ${flight.scheduled_departure}<br>
                        <br>
                        <strong>Status:</strong> ${flight.status}<br>
                        <button type="button" onclick="showFlightDetails('${flight.flight_id}')">Show Details</button>
                        ${flightDetails.status === "On Time" ? `<li><strong>Status:</strong> <span style="color: lightgreen;">${flightDetails.status}</span></li>` : ''}
                        ${flightDetails.status === "Delayed" ? `<li><strong>Status:</strong> <span style="color: red;">${flightDetails.status}</span></li>` : ''}
                    </li>
                `).join('');
                        } else {
                            noFlightsMessage.style.display = 'block';
                        }
                    } catch (error) {
                        console.error('Error fetching flights:', error);
                    }
                }
   
              
                // Asynchronously fetch flight data after page load
                async function fetchFlights() {
                    const selectedDatabase = document.getElementById('databaseSelector').value;

                    try {
                        let response;
                        if (selectedDatabase === 'mongodb') {
                            response = await fetch(`/api/flights?db=mongodb`);
                            if (!response.ok) {
                                throw new Error(`Error: ${response.status} - ${response.statusText}`);
                            } else {
                                console.log(`mongo response`, response);
                            }

                        } else if (selectedDatabase === 'postgresql') {
                            response = await fetch(`/api/flights?db=postgresql`);
                            if (!response.ok) {
                                throw new Error(`Error: ${response.status} - ${response.statusText}`);
                            } else {
                                console.log(`postgres response`, response);
                            }
                        }
                        const flights = await response.json();

                        const flightsList = document.getElementById('flightsList');
                        const flightDetailsContainer = document.getElementById('flightDetails');
                        const noFlightsMessage = document.getElementById('noFlightsMessage');
                        flightsList.innerHTML = '';

                        if (flights && flights.length > 0) {
                            flightsList.innerHTML = flights.map(flight => `
                        <li>
                            <strong>Flight Number:</strong> ${flight.flight_no}<br>
                            <strong>Destination:</strong> ${flight.arrival_airport}<br>
                            <strong>Departure Time:</strong> ${flight.scheduled_departure}<br>
                            <br>
                            <strong>Status:</strong> ${flight.status}<br>
                            <button type="button" onclick="showFlightDetails('${flight.flight_id}')">Show Details</button>
                        </li>
                    `).join('');
                        } else {
                            noFlightsMessage.style.display = 'block';
                        }
                    } catch (error) {
                        console.error('Error fetching flights:', error);
                    }
                }

                // Function to fetch and display flight details
                async function showFlightDetails(flightId) {
                    try {
                        const response = await fetch(`/api/flights/${flightId}`);
                        const flightDetails = await response.json();

                        const flightDetailsContainer = document.getElementById('flightDetails');
                        flightDetailsContainer.innerHTML = `
                    <h2>Flight Details</h2>
                    <ul>
                        <li><strong>Flight ID:</strong> ${flightDetails.flight_id}</li>
                        <li><strong>Flight Number:</strong> ${flightDetails.flight_no}</li>
                        <li><strong>Destination:</strong> ${flightDetails.arrival_airport}</li>
                        <li><strong>Departure Airport:</strong> ${flightDetails.departure_airport}</li>
                        <li><strong>Arrival Time:</strong> ${flightDetails.scheduled_arrival}</li>
                        <li><strong>Departure Time:</strong> ${flightDetails.scheduled_departure}</li>
                        <li><strong>Aircraft Code:</strong> ${flightDetails.aircraft_code}</li>
                         ${flightDetails.status === "Arrived" ? `<li><strong>Status:</strong> <span style="color: green;">${flightDetails.status}</span></li>` : ''}
                         ${flightDetails.status === "Scheduled" ? `<li><strong>Status:</strong> <span style="color: yellow;">${flightDetails.status}</span></li>` : ''}
                         ${flightDetails.status === "On Time" ? `<li><strong>Status:</strong> <span style="color: lightgreen;">${flightDetails.status}</span></li>` : ''}
                         ${flightDetails.status === "Delayed" ? `<li><strong>Status:</strong> <span style="color: red;">${flightDetails.status}</span></li>` : ''}

                         <button type="button" onclick="showEditForm('${flightDetails.flight_id}')">Update</button>
                            <button type="button" onclick="deleteFlight('${flightDetails.flight_id}')">Delete</button>
                         
                         
            </ul>
        `;
                    flightDetailsContainer.style.display = 'block';

                    } catch (error) {
                        console.error('Error fetching flight details:', error);
                    }
                }

        async function showEditForm(flightId) {
        const flightEditContainer = document.getElementById('flightEditContainer');
        const flightEditForm = document.getElementById('flightEditForm');
        const response = await fetch(`/api/flights/${flightId}`);
        const flightDetails = await response.json();
            document.getElementById('flightId').value = flightDetails.flight_id;
            document.getElementById('status').value = flightDetails.status;
            document.getElementById('flightNumber').value = flightDetails.flight_no;
            document.getElementById('arrivalAirport').value = flightDetails.arrival_airport;
            document.getElementById('departureAirport').value = flightDetails.departure_airport;
            document.getElementById('departureTime').value = flightDetails.scheduled_departure;
            document.getElementById('arrivalTime').value = flightDetails.scheduled_arrival;
            document.getElementById('aircraftCode').value = flightDetails.aircraft_code;

            flightEditContainer.style.display = 'block';
                }




        async function updateFlight(flightNumber, arrivalAirport, departureAirport, departureTime, arrivalTime, status, aircraftCode, flightId) {
        try {
        const selectedDatabase = document.getElementById('databaseSelector').value;

        const updateData = {
        flightNumber: flightNumber,
        arrivalAirport: arrivalAirport,
        departureAirport: departureAirport,
        departureTime: departureTime, 
        arrivalTime: arrivalTime, 
        status: status, 
        aircraftCode: aircraftCode, 
        flightId: flightId,
        };

        console.log('Update Data:', updateData);

        let response;

        const requestOptions = {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(updateData),
        };

        if (selectedDatabase === 'mongodb') {
            response = await fetch(`/api/flights/${flightId}?db=mongodb`, requestOptions);
        } else if (selectedDatabase === 'postgresql') {
            response = await fetch(`/api/flights/${flightId}?db=postgresql`, requestOptions);
        }

        if (!response.ok) {
            console.error(`Error: ${response.status} - ${response.statusText}`);
            throw new Error(`Error: ${response.status} - ${response.statusText}`);
        }
        console.log('Flight updated successfully!');
    } catch (error) {
        console.error('Error updating flight:', error);
    }
}




            // Function to delete a flight
        async function deleteFlight(flightId) {
            let response;
            const selectedDatabase = document.getElementById('databaseSelector').value;
            if (selectedDatabase === 'mongodb') {
                response = await fetch(`/api/flights/${flightId}?db=mongodb`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },

            });
            } else if (selectedDatabase === 'postgresql') {
            response = await fetch(`/api/flights/${flightId}?db=postgresql`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json', 
                    },
                 });

             } try {
                        console.log('Deleting flight:', flightId);
                    } catch (error) {
                        console.error('Error deleting flight:', error);
                    }
                }

    document.addEventListener('DOMContentLoaded', fetchFlights);
    document.addEventListener('DOMContentLoaded', () => {
    const flightDetailsContainer = document.getElementById('flightDetails');
    flightDetailsContainer.style.display = 'none';
});

document.getElementById('searchForm').addEventListener('submit', function (event) {
    event.preventDefault();
    const query = document.getElementById('searchInput').value;
    fetchAndRenderFlights(query);
});


  document.getElementById('databaseSelector').addEventListener('change', function () {
    const flightsList = document.getElementById('flightsList');
    flightsList.innerHTML = '';
    fetchFlights();
});

    document.addEventListener('DOMContentLoaded', () => {
    const flightDetailsContainer = document.getElementById('flightDetails');
    const flightEditContainer = document.getElementById('flightEditContainer'); 
    const flightEditForm = document.getElementById('flightEditForm');
    const flightsList = document.getElementById('flightsList');

    flightEditForm.addEventListener('submit', async function (event) {
        event.preventDefault();

        const flightNumber = document.getElementById('flightNumber').value;
        const arrivalAirport = document.getElementById('arrivalAirport').value;
        const departureAirport = document.getElementById('departureAirport').value;
        const departureTime = document.getElementById('departureTime').value;
        const arrivalTime = document.getElementById('arrivalTime').value;
        const status = document.getElementById('status').value;
        const aircraftCode = document.getElementById('aircraftCode').value;
        const flightId = document.getElementById('flightId').value;

        await updateFlight(flightNumber, arrivalAirport, departureAirport, departureTime, arrivalTime, status, aircraftCode, flightId);

        flightDetailsContainer.style.display = 'none';
        flightEditContainer.style.display = 'none';
        flightsList.innerHTML = '';
        fetchFlights();
    });
});
            </script>

        </body>
        <%- include('./partials/foot.ejs') %>

</html>